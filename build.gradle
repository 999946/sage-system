buildscript {
  ext {
    springBootVersion = '1.3.5.RELEASE'
    kotlinVersion = '1.0.6'
  }
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
    classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
    classpath 'com.eriwen:gradle-css-plugin:2.12.0'
    classpath 'com.eriwen:gradle-js-plugin:2.12.0'
  }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'spring-boot'
apply plugin: 'css'
apply plugin: 'js'

apply plugin: "kotlin-allopen"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-noarg"

jar {
  baseName = 'sage'
  version = '0.3-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.compilerArgs.add '-parameters'
compileTestJava.options.compilerArgs.add '-parameters'
springBoot {
  mainClass = 'sage.ApplicationKt'
}

noArg {
  annotation("sage.annotation.KotlinNoArg")
}

repositories {
  mavenCentral()
}

dependencies {
  compile 'org.springframework.boot:spring-boot-starter-aop'
  compile 'org.springframework.boot:spring-boot-starter-mail'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"

  compile 'com.github.httl:httl:1.0.11'
  compile 'com.github.httl:httl-springmvc:1.0.11'
  compile 'org.avaje.ebeanorm:avaje-ebeanorm:7.9.1'
  compile 'org.avaje.ebeanorm:avaje-ebeanorm-agent:4.9.2'
  compile 'org.avaje:avaje-agentloader:2.1.2'

  compile 'org.jasypt:jasypt:1.9.2'
  compile 'org.apache.commons:commons-lang3:3.4'
  compile 'commons-fileupload:commons-fileupload:1.3.1'
  compile 'org.elasticsearch:elasticsearch:2.4.0'

  runtime 'mysql:mysql-connector-java'

  testCompile 'org.springframework.boot:spring-boot-starter-test'
}

ext {
  staticSrc = 'src/main/webapp/static'
}

css.source {
  dev {
    css {
      srcDir "${staticSrc}/css"
      include "*.css"
      exclude "*.min.css"
      exclude "all.css"
      exclude "bootstrap.css"
    }
  }
}

combineCss {
  source = css.source.dev.css.files
  dest = "${staticSrc}/css/all.css"
}

minifyCss {
  source = combineCss
  dest = "${staticSrc}/css/all.css"
}

javascript.source {
  dev {
    js {
      srcDir "src/main/webapp/static/js"
      include "*.js"
      exclude "*.min.js"
      exclude "all.js"
      exclude "libs.js"
      exclude "plugins.js"
    }
  }
}

task combinejs(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
  source = javascript.source.dev.js.files
  dest = file("${staticSrc}/js/all.js")
}

task minifyjs(type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
  source = combinejs
  dest = file("${staticSrc}/js/all.js")
  closure {
    warningLevel = 'QUIET'
  }
}

task web {
  dependsOn 'combineCss'
  dependsOn 'combinejs'
}

task webmin {
  dependsOn 'minifyCss'
  dependsOn 'minifyjs'
}